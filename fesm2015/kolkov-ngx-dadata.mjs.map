{"version":3,"file":"kolkov-ngx-dadata.mjs","sources":["../../../projects/ngx-dadata/src/lib/ngx-dadata.service.ts","../../../projects/ngx-dadata/src/lib/dadata-config.ts","../../../projects/ngx-dadata/src/lib/ngx-dadata.component.ts","../../../projects/ngx-dadata/src/lib/ngx-dadata.component.html","../../../projects/ngx-dadata/src/lib/ngx-dadata.module.ts","../../../projects/ngx-dadata/src/public-api.ts","../../../projects/ngx-dadata/src/kolkov-ngx-dadata.ts"],"sourcesContent":["import {Injectable} from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {DadataResponse} from './models/dadata-response';\r\nimport {Bounds, DadataConfig, Location} from './dadata-config';\r\n\r\nexport enum DadataType {\r\n  fio = 'fio',\r\n  address = 'address',\r\n  party = 'party',\r\n  bank = 'bank',\r\n  email = 'email'\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NgxDadataService {\r\n  apiKey = '';\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  setApiKey(key: string) {\r\n    this.apiKey = key;\r\n  }\r\n\r\n  // eslint-disable-next-line max-len\r\n  getData(value: string, type: DadataType = DadataType.address, config: DadataConfig): Observable<DadataResponse> {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n        Authorization: 'Token ' + this.apiKey,\r\n      })\r\n    };\r\n    const body = Object.assign(\r\n      {},\r\n      {query: value},\r\n      {count: config?.limit},\r\n      {locations: config?.locations},\r\n      {location_boost: config?.locationsBoost},\r\n      {from_bound: config?.bounds?.fromBound},\r\n      {to_bound: config?.bounds?.toBound},\r\n      {to_bound: config?.bounds?.toBound},\r\n      {restrict_value: config?.restrictValue}\r\n    );\r\n    return this.http.post<DadataResponse>('https://suggestions.dadata.ru/suggestions/api/4_1/rs/suggest/' + type, body, httpOptions);\r\n  }\r\n}\r\n","import { DadataType } from \"./ngx-dadata.service\";\n\nexport interface Location {\n  country?: string;\n  country_iso_code?: string;\n  region?: string;\n  area?: string;\n  city?: string;\n  street?: string;\n  street_type_full?: string;\n  settlement_type_full?: string;\n  city_district_type_full?: string;\n  city_type_full?: string;\n  area_type_full?: string;\n  region_type_full?: string;\n  kladr_id?: string;\n  region_fias_id?: string;\n  area_fias_id?: string;\n  city_fias_id?: string;\n  settlement_fias_id?: string;\n  street_fias_id?: string;\n}\n\nexport interface Bound {\n  value:\n    | \"country\"\n    | \"region\"\n    | \"city\"\n    | \"street\"\n    | \"settlement\"\n    | \"area\"\n    | \"house\";\n}\n\nexport interface Bounds {\n  fromBound?: Bound;\n  toBound?: Bound;\n}\n\nexport interface DadataConfig {\n  apiKey: string;\n  type?: DadataType;\n  delay?: number;\n  limit?: number;\n  width?: \"auto\" | string;\n  minWidth?: \"0\" | string;\n  partyAddress?: \"city\" | \"full\";\n  locations?: Location[];\n  locationsBoost?: Location[];\n  bounds?: Bounds;\n  restrictValue?: boolean;\n}\n\nexport const DadataConfigDefault: DadataConfig = {\n  apiKey: \"\",\n  type: DadataType.address,\n  delay: 500,\n  limit: 10,\n  width: \"auto\",\n  minWidth: \"0\",\n  partyAddress: \"city\",\n  locations: null,\n  restrictValue: false,\n};\n","import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  HostListener,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  Renderer2,\n  SimpleChanges,\n  ViewChild\n} from '@angular/core';\nimport {DadataType, NgxDadataService} from './ngx-dadata.service';\nimport {Subject, timer} from 'rxjs';\nimport {debounce} from 'rxjs/operators';\nimport {DadataResponse} from './models/dadata-response';\nimport {DadataSuggestion} from './models/suggestion';\nimport {DadataConfig, DadataConfigDefault} from './dadata-config';\nimport {ControlValueAccessor, FormControl, NG_VALIDATORS, NG_VALUE_ACCESSOR} from '@angular/forms';\n\n/*const NGX_DADATA_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => NgxDadataComponent),\n  multi: true,\n};*/\n\nexport function createDaDataValidator(value) {\n  return (c: FormControl) => {\n    const err = {\n      rangeError: {\n        given: c.value,\n        expected: value,\n      }\n    };\n\n    return (c.value !== value) ? err : null;\n  };\n}\n\n/**\n * Autocomplete IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nlet uniqueDadataIdCounter = 0;\n\n@Component({\n  selector: 'ngx-dadata',\n  templateUrl: './ngx-dadata.component.html',\n  styleUrls: ['./ngx-dadata.component.scss'],\n  providers: [\n    {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => NgxDadataComponent),\n    multi: true\n  }, /*NGX_DADATA_VALIDATOR*/]\n})\nexport class NgxDadataComponent implements OnInit, ControlValueAccessor, OnChanges {\n  private v: any = '';\n  currentFocus = -1;\n\n  opened = false;\n\n  data: DadataSuggestion[] = [];\n\n  @Input() config: DadataConfig = DadataConfigDefault;\n  @Input() apiKey: string;\n  @Input() disabled = null;\n  @Input() type = DadataType.address;\n  @Input() limit = DadataConfigDefault.limit;\n  @Input() placeholder = '';\n  @Input() locations = null;\n\n  @Output() selectedSuggestion: DadataSuggestion;\n  @Output() selected: EventEmitter<DadataSuggestion> = new EventEmitter<DadataSuggestion>();\n  // @Output() selectedData = new EventEmitter<DaDataAddress | DaDataFIO | DaDataBank | DaDataParty | DaDataEmail>();\n  // @Output() selectedString = new EventEmitter<string>();\n\n  @ViewChild('inputValue', { static: true }) inputValue: ElementRef;\n\n  private inputString$ = new Subject<string>();\n\n  /** Unique ID to be used by autocomplete trigger's \"aria-owns\" property. */\n  id = `ngx-dadata-${uniqueDadataIdCounter++}`;\n\n  // onSuggestionSelected = (value: string) => {};\n  onTouched = () => {};\n  propagateChange: any = () => {};\n  validateFn: any = () => {};\n\n  constructor(\n    private dataService: NgxDadataService,\n    private r: Renderer2,\n    private elRef: ElementRef) {\n  }\n\n  get value(): any {\n    return this.v;\n  }\n\n  set value(v: any) {\n    if (v !== this.v) {\n      this.v = v;\n      this.propagateChange(v);\n    }\n  }\n\n  ngOnInit() {\n    /*this.validateFn = createDaDataValidator(this._value);\n    this.propagateChange(this._value);*/\n    this.type = this.config.type;\n    this.locations = this.config.locations;\n    this.dataService.setApiKey(this.apiKey ? this.apiKey : this.config.apiKey);\n    this.inputString$.pipe(\n      debounce(() => timer(this.config.delay ? this.config.delay : 500)),\n    ).subscribe(x => {\n      this.dataService.getData(x, this.type, this.config)\n        .subscribe((y: DadataResponse) => {\n        this.data = y.suggestions;\n        if (this.data.length) {\n          this.opened = true;\n        }\n      });\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.value) {\n      // console.log('ngOnChanges');\n    }\n  }\n\n  getData(value: string) {\n    this.inputString$.next(value);\n    this.currentFocus = -1;\n  }\n\n  onClick(e: MouseEvent, item: DadataSuggestion) {\n    this.inputValue.nativeElement.value = item.value;\n    this.propagateChange(item.value);\n    this.inputValue.nativeElement.focus();\n    this.selectedSuggestion = item;\n    this.data = [];\n    this.currentFocus = -1;\n    this.opened = false;\n    this.selected.emit(item);\n    // this.selectedData.emit(item.data);\n    // this.selectedString.emit(item.value);\n  }\n\n  @HostListener('document:click', ['$event'])\n  onOutsideClick($event: MouseEvent) {\n    if (!this.opened) {\n      return;\n    }\n    if (!this.elRef.nativeElement.contains($event.target)) {\n      this.data = [];\n      this.opened = false;\n    }\n  }\n\n  onArrowDown() {\n    this.removeFocus(this.currentFocus);\n    if (this.currentFocus >= this.data.length - 1) {\n      this.currentFocus = 0;\n    } else {\n      this.currentFocus++;\n    }\n    this.setFocus(this.currentFocus);\n  }\n\n  onArrowUp() {\n    this.removeFocus(this.currentFocus);\n    if (this.currentFocus === 0) {\n      this.currentFocus = this.data.length - 1;\n    } else {\n      this.currentFocus--;\n    }\n    this.setFocus(this.currentFocus);\n  }\n\n  onEnter(event: KeyboardEvent) {\n    this.selectedSuggestion = this.data[this.currentFocus];\n    this.inputValue.nativeElement.value = this.selectedSuggestion.value;\n    this.data = [];\n    this.currentFocus = -1;\n    this.propagateChange(this.selectedSuggestion.value);\n    this.selected.emit(this.selectedSuggestion);\n    // this.selectedData.emit(this.selectedSuggestion.data);\n    // this.selectedString.emit(this.selectedSuggestion.value);\n  }\n\n  setFocus(id: number) {\n    const activeEl = document.getElementById(id + 'item');\n    this.r.addClass(activeEl, 'active');\n  }\n\n  removeFocus(id: number) {\n    if (id !== -1) {\n      const activeEl = document.getElementById(id + 'item');\n      this.r.removeClass(activeEl, 'active');\n    }\n  }\n\n  writeValue(value: any): void {\n    if (value !== undefined) {\n      this.v = value;\n    } else {\n      this.v = '';\n    }\n    this.r.setProperty(this.inputValue.nativeElement, 'innerHTML', this.v);\n  }\n\n  /**\n   * Set the function to be called\n   * when the control receives a change event.\n   *\n   * @param fn a function\n   */\n  registerOnChange(fn: any): void {\n    // this.onSuggestionSelected = fn;\n    this.propagateChange = fn;\n  }\n\n  /**\n   * Set the function to be called\n   * when the control receives a touch event.\n   *\n   * @param fn a function\n   */\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n\n  /**\n   * Implements disabled state for this element\n   *\n   * @param isDisabled Disabled state flag\n   */\n  setDisabledState(isDisabled: boolean): void {\n    alert('disabled!');\n    this.disabled = isDisabled;\n  }\n}\n","<div class=\"autocomplete\">\n  <input [disabled]=\"disabled  ? true : null\" type=\"text\" class=\"search\" #inputValue (input)=\"getData(inputValue.value)\"\n         [placeholder]=\"placeholder\" (keyup.ArrowDown)=\"onArrowDown()\" (keyup.ArrowUp)=\"onArrowUp()\"\n         (keyup.Enter)=\"onEnter($event)\" spellcheck=\"false\" [(ngModel)]=\"value\" autocomplete=\"off\" />\n  <div *ngIf=\"data.length\">\n    <div class=\"autocomplete-items\">\n      <div class=\"autocomplele-item\" *ngFor=\"let item of data; let i = index\" (click)=\"onClick($event, item)\" [id]=\"i+'item'\">\n        {{item.value}}\n        <ng-template [ngIf]=\"type==='party'\">\n          <br/>\n          <span>{{item.data?.inn}} {{config.partyAddress === 'full' ? item.data?.address?.value : item.data?.address?.data?.city}}</span>\n        </ng-template>\n      </div>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { NgxDadataComponent } from './ngx-dadata.component';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule\n  ],\n  declarations: [NgxDadataComponent],\n  exports: [NgxDadataComponent]\n})\nexport class NgxDadataModule { }\n","/*\n * Public API Surface of ngx-dadata\n */\n\nexport * from './lib/ngx-dadata.service';\nexport * from './lib/ngx-dadata.component';\nexport * from './lib/ngx-dadata.module';\nexport * from './lib/dadata-config';\nexport * from './lib/models/data';\nexport * from './lib/models/suggestion';\nexport {DadataType} from './lib/ngx-dadata.service';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}